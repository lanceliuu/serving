# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: activator
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "4"
        sidecar.istio.io/proxyMemory: 4Gi
        # traffic.sidecar.istio.io/includeInboundPorts: ""   # do not intercept any inbound ports
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""  # do not intercept any outbound traffic
        proxy.istio.io/config: |  # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-certs
        sidecar.istio.io/userVolume: '[{"name": "istio-certs", "emptyDir": {"medium":"Memory"}}]'  # mount the shared volume
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-certs"}]'
      labels:
        app: activator
        role: activator
        serving.knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: activator
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: ko://knative.dev/serving/cmd/activator

        # The numbers are based on performance test results from
        # https://github.com/knative/serving/issues/1625#issuecomment-511930023
        resources:
          requests:
            cpu: 300m
            memory: 60Mi
          limits:
            cpu: 4
            memory: 4Gi
        env:
        # Run Activator with GC collection when newly generated memory is 500%.
        - name: GOGC
          value: "500"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all

        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: http1
          containerPort: 8012
        - name: h2c
          containerPort: 8013

        readinessProbe:
          httpGet:
            port: 8012
            httpHeaders:
            - name: k-kubelet-probe
              value: "activator"
          failureThreshold: 12
        livenessProbe:
          httpGet:
            port: 8012
            httpHeaders:
            - name: k-kubelet-probe
              value: "activator"
          failureThreshold: 12
          initialDelaySeconds: 15
        volumeMounts:
        - mountPath: /etc/istio-certs/
          name: istio-certs
      # The activator (often) sits on the dataplane, and may proxy long (e.g.
      # streaming, websockets) requests.  We give a long grace period for the
      # activator to "lame duck" and drain outstanding requests before we
      # forcibly terminate the pod (and outstanding connections).  This value
      # should be at least as large as the upper bound on the Revision's
      # timeoutSeconds property to avoid servicing events disrupting
      # connections.
      volumes:
      - name: istio-certs
        emptyDir:
          medium: Memory
      terminationGracePeriodSeconds: 600

---
apiVersion: v1
kind: Service
metadata:
  name: activator-service
  namespace: knative-serving
  labels:
    app: activator
    serving.knative.dev/release: devel
spec:
  selector:
    app: activator
  ports:
  # Define metrics and profiling for them to be accessible within service meshes.
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
  type: ClusterIP

# apiVersion: networking.istio.io/v1beta1
# kind: DestinationRule
# metadata:
#   name: activator
#   namespace: knative-serving
# spec:
#   host: activator-service.knative-serving.svc.cluster.local
#   trafficPolicy:
#     tls:
#       mode: DISABLE